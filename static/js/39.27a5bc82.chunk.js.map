{"version":3,"file":"static/js/39.27a5bc82.chunk.js","mappings":"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","sources":["common/CommonHeading.js","components/section/gallary/mehndi/Mehndi.js","common/loadingspinner/loadingSpinner.js","http-common.js","components/services/ImagesServices.js"],"sourcesContent":["import React from \"react\";\n\nexport default function CommonHeading(header) {\n  return (\n    <div className=\"relative mb-6 lg:mb-10 px-4 max-w-5xl mx-auto\">\n\n      <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n        <div className=\"w-full border-t border-[#1c7e80] mb-1 opacity-60\"></div>\n        <div className=\"w-full border-t border-[#1c7e80] mt-1 opacity-60\"></div>\n      </div>\n\n      <div className=\"relative flex justify-center\">\n        <span className=\"bg-white px-10 py-1 shadow-lg  shadow-slate-200\">\n          <h1 className=\"text-sm md:text-3xl lg:text-4xl  text-[#1c7e80] font-raleway tracking-widest uppercase\">\n            {header}\n          </h1>\n        </span>\n      </div>\n    </div>\n  );\n}\n\n\n","import React, { useEffect, useRef, useState } from \"react\";\nimport LightGallery from \"lightgallery/react\";\nimport lgThumbnail from \"lightgallery/plugins/thumbnail\";\nimport { mehndiImg } from \"../../../services/ImagesServices\";\nimport LoadingSpinner from \"../../../../common/loadingspinner/loadingSpinner\";\nimport CommonHeading from \"../../../../common/CommonHeading\";\nimport { Link } from \"react-router-dom\";\nimport { useError } from \"../../../../context/ErrorContext\";\nimport ScrollToTop from \"../../../../common/ScrollToTop\";\n\nfunction Mehndi() {\n  const [mehndiImage, setMehndiImage] = useState([]);\n  const [spinner, setSpinner] = useState(false);\n  const { setError } = useError();\n  const galleryRef = useRef(null);\n\n  const getImages = () => {\n    setSpinner(true);\n    mehndiImg()\n      .then((response) => {\n        const images = response.data;\n\n        const categorizeImages = (images) => {\n          const largeImages = [];\n          const smallImages = [];\n\n          images.forEach((image) => {\n            const img = new Image();\n            img.src = image.src;\n            img.onload = () => {\n              if (img.height > img.width) {\n                largeImages.push(image);\n              } else {\n                smallImages.push(image);\n              }\n            };\n          });\n\n          return new Promise((resolve) => {\n            const interval = setInterval(() => {\n              if (largeImages.length + smallImages.length === images.length) {\n                clearInterval(interval);\n                resolve({ largeImages, smallImages });\n              }\n            }, 100);\n          });\n        };\n\n        categorizeImages(images)\n          .then(({ largeImages, smallImages }) => {\n            console.log(\"Large images count:\", largeImages.length);\n            console.log(\"Small images count:\", smallImages.length);\n\n            const arrangedImages = [];\n            for (\n              let i = 0;\n              i <\n              Math.min(largeImages.length, Math.floor(smallImages.length / 2));\n              i++\n            ) {\n              arrangedImages.push(largeImages[i]);\n              arrangedImages.push(smallImages[i * 2]);\n              arrangedImages.push(smallImages[i * 2 + 1]);\n            }\n            if (largeImages.length > Math.floor(smallImages.length / 2)) {\n              arrangedImages.push(\n                ...largeImages.slice(Math.floor(smallImages.length / 2))\n              );\n            }\n\n            if (smallImages.length > largeImages.length * 2) {\n              arrangedImages.push(...smallImages.slice(largeImages.length * 2));\n            }\n\n            console.log(\"Total arranged images:\", arrangedImages.length);\n            setMehndiImage(arrangedImages);\n            setSpinner(false);\n            setTimeout(() => {\n              initIntersectionObserver();\n            }, 300);\n          })\n          .catch((error) => console.error(\"Error categorizing images:\", error));\n      })\n      .catch((error) => {\n        setError(\"Failed to fetch images. Please try again later.\");\n      });\n  };\n  const initIntersectionObserver = () => {\n    const options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.4\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('fade-in-visible');\n          observer.unobserve(entry.target);\n        }\n      });\n    }, options);\n\n    // Get all image containers\n    const imageElements = galleryRef?.current?.querySelectorAll('.image-container');\n    imageElements?.forEach(el => {\n      el.classList.add('fade-in');\n      observer.observe(el);\n    });\n  };\n\n  useEffect(() => {\n    getImages();\n\n    // Cleanup function\n    return () => {\n      const observer = new IntersectionObserver(() => { }, {});\n      observer.disconnect();\n    };\n  }, []);\n\n\n  return (\n    <div className=\"px-2 flex flex-col justify-center pt-20 lg:pt-12 items-center bg-slate-50\">\n         <ScrollToTop />\n\n\n      {CommonHeading(\"Mehndi Celebrations\")}\n\n      {spinner && (\n        <div className=\"grid justify-center items-center h-96\">\n          <LoadingSpinner />\n        </div>\n      )}\n\n      <style jsx>{`\n        .fade-in {\n          opacity: 0;\n          transform: translateY(20px);\n          transition: opacity 0.6s ease, transform 0.5s ease;\n        }\n        \n        .fade-in-visible {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      `}</style>\n      {mehndiImage.length > 0 && !spinner ? (\n        <div ref={galleryRef}>\n          <LightGallery\n            speed={500}\n            elementClassNames=\"columns-2 sm:columns-2 lg:columns-3 xl:columns-5 gap-2 [&>a]:mb-1 [&>a]:inline-block [&>a]:w-full\"\n            plugins={[lgThumbnail]}\n            download={false}\n            mobileSettings={{\n              controls: true,\n              showCloseIcon: true,\n            }}\n            onInit={() => console.log(\"LightGallery has been initialized\")}\n            mode=\"lg-fade\"\n          >\n            {mehndiImage.map((image, index) => (\n              <a key={index} href={image.src} className=\"relative block  image-container group\">\n                <div className=\"overflow-hidden\">\n                  <img\n                    src={image.src}\n                    className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-150\"\n                    alt=\"Fusion Film\"\n                  />\n                </div>\n                <div className=\"absolute inset-0 overflow-hidden\">\n                  <div className=\"absolute inset-0 bg-black bg-opacity-20 transform -translate-x-full group-hover:translate-x-0 transition-transform duration-300\"></div>\n                  <div className=\"absolute inset-0 flex items-end justify-center\">\n                    <h2\n                      className=\"font-montserrat text-[9px]  p-2 font-bold uppercase text-white z-10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      {image.name}\n                    </h2>\n                  </div>\n                </div>\n              </a>\n            ))}\n          </LightGallery>\n        </div>\n      ) : (\n        <>\n          {!spinner && (\n            <div className=\"flex justify-center h-96 items-center font-semibold\">\n              No Record Found <span className=\"animate-pulse\">...</span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Mehndi;\n","import React from \"react\";\nimport './spinner.css'\n\nconst LoadingSpinner = () => {\n  const arry = [1, 2, 3, 4, 5];\n\n  return (\n    <div className=\"loading-container\">\n      {arry.map((j, i) => (\n        <span\n        id=\"span\"\n          className=\"loading-dot\"\n          style={{\n            animationDelay: `${i * 100}ms`,\n            transform: `translateX(${i * 105}%)`\n          }}\n        ></span>\n      ))}\n    </div>\n  );\n};\nexport default LoadingSpinner;\n","import axios from \"axios\";\n\n// export const API_URL = \"http://localhost:5000\"\n// export const API_URL = \"http://192.168.79.93:5000\"\n\n\n\nexport const API_URL = \"https://backend-api.fusionphotofilms.com\"\n\n// API Client\nexport default axios.create({\n  baseURL: API_URL, \n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const imagesApi = axios.create({\n    baseURL: API_URL + \"/api\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }); ","import { imagesApi } from \"../../http-common\"\n\n\nexport const getAllCategory = async () => {\n    return await imagesApi.get(`/images/categories`)\n}\n\nexport const ImageUploadApi = async (formData) => {\n    return await imagesApi.post(`/images/uploadImage`, formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    });\n};\n\nexport const ImageUpdateApi = async (formData) => {\n    return await imagesApi.put(`/images/allImages`, formData)\n}\n\nexport const getAllImgData = async (id) => {\n    return await imagesApi.get(`/images/allImages/${id}`)\n}\n\nexport const deleteImgData = async (id, category) => {\n    return await imagesApi.delete(`/images/allImages`, { data: { id, category } })\n}\n\nexport const FrontPageImg = async () => {\n    return await imagesApi.get(`/images/frontImg`,)\n}\n\nexport const BrideImg = async () => {\n    return await imagesApi.get(`/images/brideImg`,)\n}\n\nexport const GroomImg = async () => {\n    return await imagesApi.get(`/images/groomImg`,)\n}\n\n\nexport const WeddingImg = async () => {\n    return await imagesApi.get(`/images/wedImg`,)\n}\n\nexport const PreWeddingImg = async () => {\n    return await imagesApi.get(`/images/preWeddingImg`,)\n}\n\nexport const HaldiImages = async () => {\n    return await imagesApi.get(`/images/haldiImg`,)\n}\n\nexport const EngagementImg = async () =>{\n    return await imagesApi.get(`/images/engagementImg`)\n}\n\nexport const mehndiImg = async () =>{\n    return await imagesApi.get(`/images/mehndiImage`)\n}\n\n\nexport const MekeupImg = async () =>{\n    return await imagesApi.get(`/images/mekeupImg`)\n}\n\nexport const MaternityImg = async () =>{\n    return await imagesApi.get(`/images/maternity`)\n}\n\n\nexport const getGalleryData = async () =>{\n    return await imagesApi.get(`/images/galleryContent`)\n}\n\n\nexport const getOtherImages = async () =>{\n    return await imagesApi.get(`/images/otherImg`)\n}\n\n\n\n\n\n\n"],"names":["CommonHeading","header","_jsxs","className","children","_jsx","mehndiImage","setMehndiImage","useState","spinner","setSpinner","setError","useError","galleryRef","useRef","initIntersectionObserver","_galleryRef$current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","root","rootMargin","threshold","imageElements","current","querySelectorAll","el","observe","useEffect","mehndiImg","then","response","images","largeImages","smallImages","image","img","Image","src","onload","height","width","push","Promise","resolve","interval","setInterval","length","clearInterval","categorizeImages","data","_ref","console","log","arrangedImages","i","Math","min","floor","slice","setTimeout","catch","error","disconnect","ScrollToTop","LoadingSpinner","jsx","ref","LightGallery","speed","elementClassNames","plugins","lgThumbnail","download","mobileSettings","controls","showCloseIcon","onInit","mode","map","index","href","alt","onClick","e","stopPropagation","name","_Fragment","j","id","style","animationDelay","transform","API_URL","imagesApi","axios","create","baseURL","headers","getAllCategory","async","get","ImageUploadApi","post","formData","ImageUpdateApi","put","getAllImgData","deleteImgData","category","delete","FrontPageImg","BrideImg","GroomImg","WeddingImg","PreWeddingImg","HaldiImages","EngagementImg","MekeupImg","MaternityImg","getGalleryData","getOtherImages"],"sourceRoot":""}